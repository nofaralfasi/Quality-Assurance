#!/usr/bin/perl
## Initially generated by Win32-GuiTest Recorder (v1.03)

## Pragmas/Directives
use strict;
use warnings;

## Imports
use Win32::GuiTest qw/:ALL/;
use Win32::GuiTest qw(FindWindowLike WMGetText);

$Win32::GuiTest::debug = 0; # Set to "1" to enable debug output.

sub setFocus{
	my ($str) = @_;
	my $win = WaitWindowLike(undef, $str);
	SetForegroundWindow($win);
	SetFocus($win);
	sleep(1);	
}

sub ctrlKey{
	my ($key) = @_;
	SendRawKey(VK_LCONTROL, KEYEVENTF_EXTENDEDKEY);
	SendKeys($key);
	SendRawKey(VK_LCONTROL, KEYEVENTF_EXTENDEDKEY | KEYEVENTF_KEYUP);
	sleep(1);	
}

sub shiftKey{
	my ($key) = @_;
	SendRawKey(VK_LSHIFT, KEYEVENTF_EXTENDEDKEY);
	SendKeys($key);
	SendRawKey(VK_LSHIFT, KEYEVENTF_EXTENDEDKEY | KEYEVENTF_KEYUP);
	sleep(1);	
}

sub altKey{
	my ($key) = @_;
	SendRawKey(VK_LMENU, KEYEVENTF_EXTENDEDKEY);
	SendKeys($key);
	SendRawKey(VK_LMENU, KEYEVENTF_EXTENDEDKEY | KEYEVENTF_KEYUP);
	sleep(1);	
}

sub goToLine{
	my ($key) = @_;
	ctrlKey("g");
	SendKeys($key);
	SendKeys('{ENT}');
	sleep(1);	
}

## Main/Core
my $fontdlg;
my $combo;
my $menu;
my $submenu;
my %h;
my $inputFile = 'input.txt';
my $outputFile1 = 'output1.txt';
my $string;
my $i;

##Open input file
local $/ = undef;
open FILE, $inputFile or die "Couldn't open file: $!";
binmode FILE;
$string = <FILE>;
close FILE;

##Open file1
open(my $fh, '>', $outputFile1) or die "Could not open file '$outputFile1' $!";
print $fh $string;

open($fh, '<', $outputFile1) or die "Could not open file '$outputFile1' $!";
system("start notepad.exe");
setFocus("Untitled");
SendKeys($string);

my @windows = FindWindowLike(0, "", "Notepad");
die "More than one notepad open\n" if @windows > 1;
die "No notepad is running, please open one with some text in it.\n" if not @windows;
 
my $notepad = $windows[0];
my @edits = FindWindowLike($notepad, "", "Edit");
die "More than one edit inside notepad: " .  @edits . "\n" if @edits > 1;
die "No edit window found inside notepad\n" if not @edits;
 
print "----------------------------------------------------------\n";
print WMGetText($edits[0]);
print "\n";
print "----------------------------------------------------------\n";

#Set focus to the unsaved notepad file
setFocus("Untitled");

##Test number 1 - replace with match case:
#Go to the beginning of the file
goToLine('1');

#Replace window
ctrlKey("h");
SendKeys('sun{TAB}moon{TAB}{SPC}');
sleep(1);

for ($i = 0; $i < 2; $i++) {    
   SendKeys("{TAB}"); 			
}
for ($i = 0; $i < 2; $i++) {    
   SendKeys('{ENT}');	
   sleep(1);		
}		    
for ($i = 0; $i < 3; $i++) {
   SendKeys("{TAB}"); 			
}
sleep(1);

#changes first letter to upper case
shiftKey("s");
SendKeys('un{TAB}');
sleep(1);
shiftKey("m");
SendKeys('oon{TAB}');
for ($i = 0; $i < 3; $i++) {
   sleep(1);
   SendKeys("{TAB}"); 
   SendKeys("{ENT}"); 	
}
SendKeys('{ESC}');

##Test number 2 - replace with empty:
#Go to the beginning of the file
goToLine('1');	

#Replace window
ctrlKey("h");
SendKeys('doo{TAB}{BS}');

for ($i = 0; $i < 4; $i++) {  
   sleep(1);  
   SendKeys("{TAB}"); 		
}
SendKeys('{ENT}');			
sleep(1);
		    
for ($i = 0; $i < 2; $i++) {
   SendKeys("{TAB}");
   sleep(1); 			
}
SendKeys('{BS}{TAB}');
sleep(1);
SendKeys('doo');

for ($i = 0; $i < 2; $i++) { 
   sleep(1);
   SendKeys("{TAB}"); 			
}
SendKeys('{ENT}');	
sleep(1);


##Test number 3 - replace with spaces:
#Go to the beginning of the file
goToLine('1');	

#Replace window
ctrlKey("h");
SendKeys('   {TAB} doo doo doo');
sleep(1);

for ($i = 0; $i < 3; $i++) {    
   SendKeys("{TAB}"); 			
}
for ($i = 0; $i < 3; $i++) {
   sleep(1);
   SendKeys("{ENT}"); 
}
sleep(1);				
SendKeys('{ESC}');		


##Test number 4 - replace with a very long string:
#Go to the beginning of the file
goToLine('1');	

#Replace window
ctrlKey("h");
SendKeys("Little darling, it feels like years since it's been here{TAB}This is a very beautiful line. Unfortunately I had to replace it for the test. If I'll continue you won't see the rest because I've reached the maximum length.");

for ($i = 0; $i < 3; $i++) {    
   SendKeys("{TAB}"); 
   sleep(1);			
}
for ($i = 0; $i < 3; $i++) { 
   SendKeys("{ENT}"); 
   sleep(1);   	
}				
SendKeys('{ESC}');	

#Go to the beginning of the file
goToLine('1');

#Save & exit
altKey("{F4}");
sleep(1);
SendKeys('{ENT}');
SendKeys("output2.txt");
sleep(1);
SendKeys('{ENT}');

#Prints all Fonts on the Cmd window 
system("start notepad.exe");
sleep(1);

# Open the Font dialog
MenuSelect("F&ormat|&Font");  
sleep(1);

# Find the Font dialog using the title and window class
# The Font dialog isn't a child of the notepad window
$fontdlg = GetForegroundWindow();
die "We could not fing the Font dialog\n" if not defined $fontdlg;
print GetWindowText($fontdlg), "s:\n";
sleep(1);

# Find the right combo using it's control id
($combo) = FindWindowLike($fontdlg, "", "ComboBox", 0x470);
die "Where is the combo with the font names?" unless $combo;

# Print all the font names
for (GetComboContents($combo)) {
print "'$_'" . "\n";
}
sleep(1);

# Close the dialog
SendKeys("{ESC}");


# Prints the names of the menus
$menu = GetMenu(GetForegroundWindow());
print "Menu:\n";
menu_parse($menu);
 
# Close the menu and notepad
sleep(1);
SendKeys("{ESC}%{F4}");
 
 
# this function receives a menu id and prints as much information about that menu and 
# all its submenues as it can
sub menu_parse {
    my ($menu, $depth) = @_;
    $depth ||= 0;
     
    foreach my $i (0..GetMenuItemCount($menu)-1) {
            %h = GetMenuItemInfo($menu, $i);
            print "   " x $depth;
            print "$i  ";
            print $h{text} if $h{type} and $h{type} eq "string"; 
            print "------" if $h{type} and $h{type} eq "separator"; 
            print "UNKNOWN" if not $h{type};
            print "\n";
 
            $submenu = GetSubMenu($menu, $i);
            if ($submenu) {
                    menu_parse($submenu, $depth+1);
	   sleep(1);
            }
    }
}
 
system("start notepad.exe");
setFocus("Untitled");
Win32::GuiTest::SendKeys("This is the end of the script for the HW2 assignment,\n");
Win32::GuiTest::SendKeys("I hope you consider this test succesful.\n");
Win32::GuiTest::SendKeys("I've printed on the Cmd window the input file, the Fonts and the notepad's Menu.\n");
Win32::GuiTest::SendKeys("You should get 2 new files with the content of the input file, one without changes, and one with changes.\n");
Win32::GuiTest::SendKeys("Thank you and goodbye..");
sleep 1;
Win32::GuiTest::SendKeys(".");
sleep 1;
Win32::GuiTest::SendKeys(".");
sleep(1);
Win32::GuiTest::SendKeys("%{F4}{TAB}{ENTER}");
